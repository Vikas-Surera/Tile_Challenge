{"version":3,"sources":["Card.js","App.js","reportWebVitals.js","index.js"],"names":["Card","imageUrl","heading","subtitle","className","options","max","src","alt","slice","App","useState","data","setData","loaidng","updateLoading","useEffect","getCardData","fetch","then","res","json","result","error","alert","params","particleConfig","map","card","i","title","body","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"6LAwBeA,MAnBf,YAA2C,IAA5BC,EAA2B,EAA3BA,SAASC,EAAkB,EAAlBA,QAAQC,EAAU,EAAVA,SAC5B,OACI,eAAC,IAAD,CAAMC,UAAU,YAAYC,QAAS,CAAEC,IAAM,IAA7C,UACI,qBAAKF,UAAU,aAAf,SACI,qBAAKG,IAAKN,EAAUO,IAAI,iBAE5B,sBAAKJ,UAAU,cAAf,UACI,6BACKF,EAAQO,MAAM,EAAE,MAErB,4BACKN,EAASM,MAAM,EAAE,a,yBCwDvBC,MA/Df,WAGE,IAeA,EAAuBC,mBAAS,IAAhC,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAeC,EAAf,KAGAC,qBAAU,WACRC,MACA,IAGF,IAAMA,EAAc,WAClBC,MAAM,8CACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACCA,EAASA,EAAOb,MAAM,EAAE,GACxBI,EAAQS,GACRP,GAAc,MAEhB,SAACQ,GACCC,MAAM,iBAMd,OAAGV,EACM,qBAAKV,UAAU,UAAf,wBAOP,gCACE,cAAC,IAAD,CAAWqB,OAAQC,EAAgBtB,UAAU,OAC7C,qBAAKA,UAAU,iBAAf,SAlDa,CACf,CACEH,SAAU,wEAEZ,CACEA,SAAU,2EAEZ,CACEA,SAAU,iFAEZ,CACEA,SAAU,kFAyCG0B,KAAI,SAACC,EAAKC,GAAN,OAAU,cAAC,EAAD,CAAwB3B,QAASU,EAAKiB,GAAGC,MAAO3B,SAAUS,EAAKiB,GAAGE,KAAM9B,SAAU2B,EAAK3B,UAAvF,eAAmB4B,aCpDrCG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,EAAD,IAEAC,SAASC,eAAe,SAM1BX,K","file":"static/js/main.7bd71995.chunk.js","sourcesContent":["import Tilt from 'react-tilt';\r\n\r\n/**\r\n * Card Component\r\n */\r\nfunction Card({imageUrl,heading,subtitle}){\r\n    return (\r\n        <Tilt className=\"Tilt card\" options={{ max : 25 }} >\r\n            <div className=\"card-image\" >\r\n                <img src={imageUrl} alt=\"card-image\" />\r\n            </div>\r\n            <div className=\"card-detail\">\r\n                <h3>\r\n                    {heading.slice(0,20)}\r\n                </h3>\r\n                <p>\r\n                    {subtitle.slice(0,50)}\r\n                </p>\r\n            </div>\r\n        </Tilt>\r\n        \r\n    );\r\n}\r\n\r\nexport default Card;","import './App.css';\nimport Card from './Card';\nimport React,{useState,useEffect} from 'react';\nimport Particles from 'react-particles-js';\nimport particleConfig from './particlesjs-config.json';\n\n/**\n * Main App component\n */\nfunction App() {\n\n  // default image urls\n  const cardData = [\n    {\n      imageUrl: \"https://cdn.pixabay.com/photo/2018/03/30/15/11/deer-3275594__480.jpg\",\n    },\n    {\n      imageUrl: \"https://cdn.pixabay.com/photo/2018/04/06/13/46/poly-3295857_960_720.jpg\",\n    },\n    {\n      imageUrl: \"https://cdn.pixabay.com/photo/2018/04/07/09/29/small-poly-3298069_960_720.jpg\",\n    },\n    {\n      imageUrl: \"https://cdn.pixabay.com/photo/2018/04/25/18/08/small-poly-3350168_960_720.jpg\",\n    },\n  ]\n\n  const [data,setData] = useState([]); // api title and body data Array\n  const [loaidng,updateLoading] = useState(true); // loading status\n\n  // fetching api\n  useEffect(() =>{\n    getCardData();\n  },[])\n\n  // fetch data function\n  const getCardData = () => {\n    fetch(\"https://jsonplaceholder.typicode.com/posts\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          result = result.slice(0,4);\n          setData(result);\n          updateLoading(false);\n        },\n        (error) => {\n          alert('Api error');\n        }\n      )\n  }\n\n  // render loading status\n  if(loaidng){\n    return <div className=\"loading\">\n      Loading...\n    </div>\n  }\n  \n  // Render Card\n  return (\n    <div>\n      <Particles params={particleConfig} className='bg'/>\n      <div className=\"card-container\" >\n        {\n          cardData.map((card,i)=><Card key={`card_${i}`} heading={data[i].title} subtitle={data[i].body} imageUrl={card.imageUrl}/>)\n        }\n      \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}